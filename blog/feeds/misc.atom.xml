<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>機械設計工程系 KMOLab - Misc</title><link href="https://kmolab.github.io/blog/" rel="alternate"></link><link href="https://kmolab.github.io/blog/feeds/misc.atom.xml" rel="self"></link><id>https://kmolab.github.io/blog/</id><updated>2018-04-22T11:00:00+08:00</updated><entry><title>更新 Let's Encrypt 數位簽章</title><link href="https://kmolab.github.io/blog/update_letsencrypt.html" rel="alternate"></link><published>2018-04-22T11:00:00+08:00</published><updated>2018-04-22T11:00:00+08:00</updated><author><name>yen</name></author><id>tag:kmolab.github.io,2018-04-22:/blog/update_letsencrypt.html</id><summary type="html">&lt;p&gt;制式的 Let's Encrypt 以安裝 python-certbot-nginx 程式從 certbot 網站取得正式的數位簽章, 然後自動修改原先只有 http 設定的 nginx 網站, 重新啟動後, 就可以讓該網站以 https 連結.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;制式的 Let's Encrypt 以安裝 python-certbot-nginx 程式從 certbot 網站取得正式的數位簽章, 然後自動修改原先只有 http 設定的 nginx 網站, 重新啟動後, 就可以讓該網站以 https 連結.&lt;/p&gt;


&lt;h2&gt;90 天有效期&lt;/h2&gt;
&lt;p&gt;雖然每次從 certbot 取得的數位簽章只有 90 天效期, 但是 python-certbot-nginx 程式提供了 autorenew 的功能, 使用者可以持續透過自動更新使用由 certbot 提供的數位簽章.&lt;/p&gt;
&lt;p&gt;只不過目前在 KMOLab 所使用的網站, 幾乎都以安裝 Fossil SCM 為主, nginx 的功能在於從 http 跳轉到以 Stunnel 啟動的 https, 並且由 Stunnel 啟動程式在內部 IP 傳送 Fossil SCM 的網站資料.&lt;/p&gt;
&lt;p&gt;換言之, KMOLab 從 certbot 取得的正式數位簽章並非用於 nginx, 而是轉給 Stunnel 使用. 而目前的 python-certbot-nginx 只能透過 nginx 確認網站合法的 domain name 設定, 因此在修改程式轉為相容 Stunnel 之前, 使用 certbot 的數位簽章, 必須手動進行.&lt;/p&gt;
&lt;h2&gt;實際操作步驟&lt;/h2&gt;
&lt;p&gt;首先必須停止 Stunnel 執行:&lt;/p&gt;
&lt;p&gt;sudo /etc/init.d/stunnel4 stop&lt;/p&gt;
&lt;p&gt;接下來停止 nginx 執行:&lt;/p&gt;
&lt;p&gt;sudo /etc/init.d/nginx stop&lt;/p&gt;
&lt;p&gt;接著將目前從 nginx http 跳轉到 Stunnel 啟動的 https 網站設定 /etc/nginx/sites-available/default 改為由 nginx 掌控 https 的 default_certbot 設定.&lt;/p&gt;
&lt;p&gt;接著重新啟動 nginx:&lt;/p&gt;
&lt;p&gt;sudo /etc/init.d/nginx start&lt;/p&gt;
&lt;p&gt;然後取得新的數位簽章:&lt;/p&gt;
&lt;p&gt;sudo certbot renew&lt;/p&gt;
&lt;p&gt;所取得的公鑰與私鑰檔案:&lt;/p&gt;
&lt;p&gt;/etc/letsencrypt/live/mde1a1.kmol.info/cert.pem
/etc/letsencrypt/live/mde1a1.kmol.info/privkey.pem&lt;/p&gt;
&lt;p&gt;最後將 cert.pem 複製為 /etc/stunnel/localhost.crt, privkey.pem 複製為 /etc/stunnel/localhsot.key 後, 將 /etc/nginx/sites-available/default 換為跳轉為 Stunnel 控管的 default_stunnel, 重新啟動 nginx 與 stunnel, 就可以使用該數位簽章於從 nginx http 跳轉至正式 https 的 Stunnel+Fossil SCM 網站.&lt;/p&gt;
&lt;p&gt;其中用來跳轉 https 的 nginx 設定:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
server {
listen 80;
server_name mde1a1.kmol.info;
rewrite ^/(.*)$ https://mde1a1.kmol.info/$1 permanent;
}
&lt;/pre&gt;</content><category term="Lets encrypt"></category></entry><entry><title>2018 第二季-開始 Lua</title><link href="https://kmolab.github.io/blog/starting-lua-2018.html" rel="alternate"></link><published>2018-04-04T11:00:00+08:00</published><updated>2018-04-04T11:00:00+08:00</updated><author><name>yen</name></author><id>tag:kmolab.github.io,2018-04-04:/blog/starting-lua-2018.html</id><summary type="html">&lt;p&gt;會興起將 &lt;a href="https://www.lua.org/"&gt;Lua&lt;/a&gt; 導入計算機程式課程, 是因為 &lt;a href="http://www.coppeliarobotics.com/"&gt;V-rep&lt;/a&gt;, 因為除了 C/C++ API 外, 標準 API 程式內嵌 (embedded) 與附加 (add-on) 語言, 就是 &lt;a href="https://www.lua.org/"&gt;Lua&lt;/a&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;會興起將 &lt;a href="https://www.lua.org/"&gt;Lua&lt;/a&gt; 導入計算機程式課程, 是因為 &lt;a href="http://www.coppeliarobotics.com/"&gt;V-rep&lt;/a&gt;, 因為除了 C/C++ API 外, 標準 API 程式內嵌 (embedded) 與附加 (add-on) 語言, 就是 &lt;a href="https://www.lua.org/"&gt;Lua&lt;/a&gt;.&lt;/p&gt;


&lt;h2&gt;以 &lt;a href="https://www.msys2.org/"&gt;Msys2&lt;/a&gt; 編譯 &lt;a href="https://www.lua.org/"&gt;Lua&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;下載 &lt;a href="https://drive.google.com/open?id=1cHBKoX20eO1oDOp0FQC4HRGW5xuroeHl"&gt;kmol_twigs.7z&lt;/a&gt; 後, 解開壓縮檔, 以 start.bat 啟動隨身程式系統.&lt;/p&gt;
&lt;p&gt;從 &lt;a href="http://www.lua.org/download.html"&gt;http://www.lua.org/download.html&lt;/a&gt; 下載 lua 5.3.4 原始碼. 在隨身系統的命令列中執行 mingw32-make mingw 就可以完成編譯, 取得 lua.exe, luac.exe 與 liblua.a&lt;/p&gt;
&lt;h2&gt;Fengari 專案&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/fengari-lua"&gt;fengari-lua&lt;/a&gt; 利用 Javascript 改寫 &lt;a href="https://www.lua.org/"&gt;Lua&lt;/a&gt; 解譯器後, 在網頁中透過 &lt;a href="https://github.com/fengari-lua/fengari-web"&gt;fengari-web&lt;/a&gt; 就可以執行 &lt;a href="https://www.lua.org/"&gt;Lua&lt;/a&gt; 程式外, 還能夠導入 js 模組, 使用 Javascript 程式庫中相關物件的方法與屬性. &lt;a href="https://github.com/davchoo/SchoolProject"&gt;SchoolProject&lt;/a&gt; 就是利用 &lt;a href="https://ace.c9.io/"&gt;Ace&lt;/a&gt; 編輯器與 &lt;a href="https://github.com/fengari-lua/fengari-web"&gt;fengari-web&lt;/a&gt;, 讓使用者可以直接在瀏覽器中編輯執行 &lt;a href="https://www.lua.org/"&gt;Lua&lt;/a&gt; 程式. &lt;a href="http://mde.tw/vecp2018/lua/SchoolProject"&gt;vecp2018_lua&lt;/a&gt; (&lt;a href="https://github.com/mdecourse/vecp2018/tree/gh-pages/lua/SchoolProject"&gt;原始碼&lt;/a&gt;) 則延續 &lt;a href="https://github.com/davchoo/SchoolProject"&gt;SchoolProject&lt;/a&gt;, 增加了一些功能, 可以用於大一的計算機程式課程中.&lt;/p&gt;
&lt;h2&gt;令人驚訝的發現&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://openresty.org"&gt;openresty&lt;/a&gt; 是一套結合 &lt;a href="https://nginx.org/en/"&gt;Nginx&lt;/a&gt; 與 &lt;a href="https://www.lua.org/"&gt;Lua&lt;/a&gt; 的網際程式平台. 而 &lt;a href="http://leafo.net/lapis/"&gt;lapis&lt;/a&gt; 則是架構在 &lt;a href="http://openresty.org"&gt;openresty&lt;/a&gt; 平台上的網際程式框架, 令人驚訝的發現是, 在如此一個並非十分熱門的平台網站中, 發現&lt;a href="https://www.smartisan.com/"&gt;錘子科技&lt;/a&gt;捐了 15 萬美金給 &lt;a href="http://openresty.org"&gt;openresty&lt;/a&gt; (儘管&lt;a href="http://www.sohu.com/a/227538238_827544"&gt;過程艱辛&lt;/a&gt;), 而且 &lt;a href="http://openresty.org"&gt;openresty&lt;/a&gt; 就是源自中國的開源專案. 相關資訊來自: &lt;a href="http://www.infoq.com/cn/articles/what-is-openresty-mentioned-in-smartisan-release-conference"&gt;http://www.infoq.com/cn/articles/what-is-openresty-mentioned-in-smartisan-release-conference&lt;/a&gt;.&lt;/p&gt;</content><category term="domain name"></category><category term="cname"></category></entry><entry><title>本站網址改為 lab.kmol.info</title><link href="https://kmolab.github.io/blog/use-blog-kmol-info-as-domain-name.html" rel="alternate"></link><published>2018-01-20T11:00:00+08:00</published><updated>2018-01-20T11:00:00+08:00</updated><author><name>yen</name></author><id>tag:kmolab.github.io,2018-01-20:/blog/use-blog-kmol-info-as-domain-name.html</id><summary type="html">&lt;p&gt;目前的網址為 kmolab.github.io, 從今起希望改為 lab.kmol.info&lt;/p&gt;
</summary><content type="html">&lt;p&gt;目前的網址為 kmolab.github.io, 從今起希望改為 lab.kmol.info&lt;/p&gt;


&lt;h2&gt;DNS 設定&lt;/h2&gt;
&lt;p&gt;首先必須先在 DNS 伺服器中, 新增 CNAME 類型, 主機選擇 lab, 指向則設為 kmolab.github.io&lt;/p&gt;
&lt;h2&gt;修改 publishconf.py&lt;/h2&gt;
&lt;p&gt;接下來必須修改  publishconf.py, 將 SITEURL 設為 'https://kmolab.github.io/blog'&lt;/p&gt;
&lt;h2&gt;Github 倉儲設定&lt;/h2&gt;
&lt;p&gt;倉儲中新增一個 CNAME 檔案, 內容為 lab.kmol.info, 且進入倉儲 settings 查驗是否 Custom domain 也是設為 lab.kmol.info, 透過以上設定就可以將 &lt;a href="http://kmolab.github.io"&gt;http://kmolab.github.io&lt;/a&gt; 轉為 &lt;a href="http://lab.kmol.info"&gt;http://lab.kmol.info&lt;/a&gt;&lt;/p&gt;</content><category term="domain name"></category><category term="cname"></category></entry><entry><title>大學生為何不來上課?</title><link href="https://kmolab.github.io/blog/first-discussion-blog.html" rel="alternate"></link><published>2017-06-05T05:29:00+08:00</published><updated>2017-06-05T05:29:00+08:00</updated><author><name>kmol</name></author><id>tag:kmolab.github.io,2017-06-05:/blog/first-discussion-blog.html</id><summary type="html">&lt;p&gt;大學生不願進教室上課的原因很多, 學費太低? 學不到東西? 完全跟不上進度? 老師太混? 上與不上都差不多? 實在爬不起來? 沒有人叫我起床? &lt;/p&gt;
</summary><content type="html">&lt;p&gt;大學生不願進教室上課的原因很多, 學費太低? 學不到東西? 完全跟不上進度? 老師太混? 上與不上都差不多? 實在爬不起來? 沒有人叫我起床? &lt;/p&gt;


&lt;h2&gt;大學生為何不來上課?&lt;/h2&gt;
&lt;p&gt;首先就大學生上課, 有幾項基本組成: 時段、課程內容、教師與學生等. 因此, 大學生之所以不想來上課, 可能是因為時段太早, 學生爬不起來而翹課; 也可能是課程內容不能讓學生認同, 內容太過簡單, 內容太過困難等原因, 讓學生視上課為畏途, 一有機會就不願意到課; 另外也可能是老師的教學方式得不到學生認同, 因此不願意上課; 最後則是學生本身的心態, 完全不知道為何要上這門課, 或者如何克服課程中所碰到的困難等問題, 導致學生一逮到機會就斷然翹課.&lt;/p&gt;
&lt;h2&gt;時段太早爬不起床&lt;/h2&gt;
&lt;p&gt;因時段太早而翹課, 大家都知道這絕對是藉口, 也就是說, 這不是學生翹課的主要原因, 而是因為其他主要原因的影響下, 讓學生拿時段太早當作翹課的藉口.&lt;/p&gt;
&lt;h2&gt;內容太淺, 內容太深&lt;/h2&gt;
&lt;p&gt;接著來談談因為課程內容無法得到學生認同而翹課的因素, 一般而說, 過去循序漸進, 以靜態課本內容為主的教學, 較能得到學生的認同, 因為所有會涵蓋的教學內容, 都已經鉅細靡遺列在教科書中, 因此針對此類型的課程, 學生到課的主要動機在於能以較高效益理解教科書內容, 但是針對主題已定但內容會隨學習成效而加以取捨的課程, 若學生的學習動機不夠強, 就會覺得無法掌握課程教學的主軸而失焦, 導致認為課程內容太過無聊或太過複雜而中途放棄, 造成學生不願意到課.&lt;/p&gt;
&lt;h2&gt;打工賺錢太忙, 沒時間上課&lt;/h2&gt;
&lt;p&gt;有部分學生因為經濟問題, 而必須邊上課邊工作賺錢, 大多數情況下, 由於大學尚未畢業, 無法根據專業找到報酬較高的工作, 因此大多在以時數累積賺錢的第一線服務業工作為主.&lt;/p&gt;
&lt;p&gt;當學生日以繼夜打工賺取學費或生活費的同時, 經常以此為藉口而弄得沒時間上課時, 最後在大學註冊的最終目的, 就只剩下拿學位一件事, 一般情況下, 非但無法專心在自己所學的專業上日日進步, 反而在自己的學業成績單上留下許多不良紀錄, 嚴重影響畢業後的發展.&lt;/p&gt;
&lt;p&gt;針對此類學生, 我們的建議是, 可以向學校的科系辦公室或職涯規劃單位求助, 尋求與本身專業有關的打工機會, 並且試著利用學校各專業科目所學內容, 在專業公司協助解決實務問題, 假若, 我們是說假若, 事實證明學校所傳授的知識, 完全無法在打工的過程中解決任何實務問題, 那麼表示念這書甚至拿這學位, 根本無助於往後的發展, 這時這些學生就可大步離開學校, 全力投入自己設想更有意義的工作上, 最後也就不會再有沒時間上課的問題了.&lt;/p&gt;
&lt;h2&gt;不知老師在教什麼?&lt;/h2&gt;
&lt;p&gt;老師的教學方式確實會影響學生的學習意願, 但是當學生從頭到尾都沒能到課的情形下, 還大聲疾呼說不知老師在教什麼? 就有些說不過去.&lt;/p&gt;
&lt;h2&gt;學這些東西沒有用&lt;/h2&gt;
&lt;p&gt;假如學生與家長真的認為在學校所學, 甚至拿學位無助往後發展, 建議應該及早離開學校, 從事更有意義的事, 尋求更好的發展機會.&lt;/p&gt;
&lt;h2&gt;其他思考&lt;/h2&gt;
&lt;p&gt;學生為何而讀, 為何而學, 為何而問?&lt;/p&gt;
&lt;p&gt;老師如何弄懂學生處境&lt;/p&gt;
&lt;p&gt;設法與學生共同學習&lt;/p&gt;
&lt;p&gt;鼓勵自學、執行與想像&lt;/p&gt;
&lt;p&gt;設法與表現好的學生一起協助跟不上進度的同學&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ptt.cc/bbs/Gossiping/M.1392611157.A.D09.html"&gt;https://www.ptt.cc/bbs/Gossiping/M.1392611157.A.D09.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://kknews.cc/education/bxbg34n.html"&gt;https://kknews.cc/education/bxbg34n.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.cheers.com.tw/blog/blogTopic.action?id=425&amp;amp;nid=5513"&gt;https://www.cheers.com.tw/blog/blogTopic.action?id=425&amp;amp;nid=5513&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.thenewslens.com/article/664"&gt;https://www.thenewslens.com/article/664&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://shinphotos.com/2014-03-08-297/"&gt;https://shinphotos.com/2014-03-08-297/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.businessweekly.com.tw/article.aspx?id=1124&amp;amp;type=Blog"&gt;http://www.businessweekly.com.tw/article.aspx?id=1124&amp;amp;type=Blog&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;大學生應有的學習態度&lt;/h2&gt;
&lt;p&gt;面對全球協同的知識經濟環境, 身為一個大學生, 至少必須:&lt;/p&gt;
&lt;p&gt;不要怕困難 (基本信念) – 因為幾乎處於網路時代的所有人, 在享受高度科技發展所帶來的便利性之後, 都必須隨時獨力或合力克服各種困難.
不要失去熱忱 (強化動力) – 許多人在生活周遭都會碰到非常多不盡如人意的各種挑戰, 持續保持個人與團隊的處事熱忱, 是堅持克服困難的必備動力.
不要以為不可能 (終究達陣) – 只要個人不斷提升待人處事能力, 持續接觸人文養分, 並且在團隊機制的架構下, 以轉知為智的精神來解決各式問題, 假以時日, 便可實現團隊理想, 化不可能為可能!&lt;/p&gt;
&lt;p&gt;培養新世紀大學生的關鍵能力: &lt;/p&gt;
&lt;p&gt;http://www.tpea.org.tw/uploads/TPEA_2013112021132.pdf&lt;/p&gt;</content><category term="機械設計"></category><category term="課程"></category></entry><entry><title>其他</title><link href="https://kmolab.github.io/blog/first-misc-blog.html" rel="alternate"></link><published>2017-06-05T04:29:00+08:00</published><updated>2017-06-05T04:29:00+08:00</updated><author><name>kmol</name></author><id>tag:kmolab.github.io,2017-06-05:/blog/first-misc-blog.html</id><summary type="html">&lt;p&gt;不在設置, 模擬, 實作與論述類別的內容, 則放入雜項其他類別&lt;/p&gt;
</summary><content type="html">&lt;p&gt;不在設置, 模擬, 實作與論述類別的內容, 則放入雜項其他類別&lt;/p&gt;
</content><category term="機械設計"></category><category term="課程"></category></entry><entry><title>實作</title><link href="https://kmolab.github.io/blog/first-realization-blog.html" rel="alternate"></link><published>2017-06-05T03:29:00+08:00</published><updated>2017-06-05T03:29:00+08:00</updated><author><name>kmol</name></author><id>tag:kmolab.github.io,2017-06-05:/blog/first-realization-blog.html</id><summary type="html">&lt;p&gt;紀錄與實作有關的內容, 實體製作&lt;/p&gt;
</summary><content type="html">&lt;p&gt;紀錄與實作有關的內容, 實體製作&lt;/p&gt;


&lt;h2&gt;操作流程拍攝&lt;/h2&gt;
&lt;p&gt;有關實作, 包含拍攝實際操作的照片與影片. 在 Windows 環境建議使用 &lt;a href="https://getsharex.com/"&gt;ShareX&lt;/a&gt; 拍攝, Ubuntu 則建議使用 &lt;a href="https:// .net/kazam"&gt;Kazam&lt;/a&gt;. 另外一個值得研究的 PyQt5 + FFMpeg 工具位於: &lt;a href="https://github.com/codeshard/videomorph"&gt;https://github.com/codeshard/videomorph&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;理想的課程網頁&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://lectures.quantecon.org/"&gt;https://lectures.quantecon.org/&lt;/a&gt; 是一門教授數學與計量經濟學的課程, 分別使用 Python 與 Julia 程式語言, 採用 Python3 的課程教材 pdf 位於: &lt;a href="https://lectures.quantecon.org/_static/pdfs/QuantEconlectures-python3.pdf"&gt;https://lectures.quantecon.org/_static/pdfs/QuantEconlectures-python3.pdf&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;這門課程的網頁不僅有 &lt;a href="https://quantecon.org/news"&gt;News&lt;/a&gt;, 有&lt;a href="http://discourse.quantecon.org/"&gt;論壇&lt;/a&gt;, 並使用 Jupyter 建立網際 &lt;a href="https://quantecon.org/notebooks.html"&gt;Notebook&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;其中, 互動討論程式: &lt;a href="https://github.com/discourse/discourse"&gt;https://github.com/discourse/discourse&lt;/a&gt;, 為 discourse, 採用 Ruby 建立.&lt;/p&gt;
&lt;p&gt;Docker for Discourse: &lt;a href="https://github.com/discourse/discourse_docker"&gt;https://github.com/discourse/discourse_docker&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安裝: &lt;a href="https://blog.fntsr.tw/articles/2014/11/07/how-to-build-discourse-with-docker-1/"&gt;https://blog.fntsr.tw/articles/2014/11/07/how-to-build-discourse-with-docker-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Discourse 中文: &lt;a href="https://meta.discoursecn.org/"&gt;https://meta.discoursecn.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;網際程式框架: &lt;a href="https://github.com/emberjs/ember.js"&gt;https://github.com/emberjs/ember.js&lt;/a&gt;&lt;/p&gt;</content><category term="機械設計"></category><category term="課程"></category></entry></feed>