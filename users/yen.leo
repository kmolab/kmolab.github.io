<?xml version="1.0" encoding="utf-8"?>
<!-- Created by Leo: http://leoeditor.com/leo_toc.html -->
<leo_file xmlns:leo="http://leoeditor.com/namespaces/leo-python-editor/1.1" >
<leo_header file_format="2" tnodes="0" max_tnode_index="0" clone_windows="0"/>
<globals body_outline_ratio="0.5" body_secondary_ratio="0.5">
	<global_window_position top="50" left="50" height="500" width="700"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="yen.20170108171605.1"><vh>@settings</vh>
<v t="yen.20170108171605.2"><vh>@data qt-gui-plugin-style-sheet</vh></v>
<v t="yen.20170108171605.3"><vh>@string initial_split_orientation = horizontal</vh></v>
</v>
<v t="yen.20170108171622.1"><vh>有關 kmolab.github.io</vh></v>
<v t="yen.20170108171733.1" a="E"><vh>@path ../</vh>
<v t="leo.20170706005043.1" a="E"><vh>@clean index.html</vh>
<v t="leo.20170706005043.2" a="E"><vh>html</vh>
<v t="leo.20170706005043.3"><vh>head</vh></v>
<v t="leo.20170706005043.4" a="E"><vh>body</vh>
<v t="leo.20170706005043.5" a="E"><vh>reveal div</vh>
<v t="leo.20170706005043.6" a="E"><vh>slides div</vh>
<v t="leo.20170706005043.7" a="E"><vh>封面投影片</vh>
<v t="leo.20170706005043.8"><vh>封面投影片內容</vh></v>
</v>
<v t="leo.20170706005043.9"><vh>快捷鍵</vh>
<v t="leo.20170706005043.10"><vh>投影片快捷鍵</vh></v>
</v>
<v t="leo.20170706005043.11" a="E"><vh>溝通與表達</vh>
<v t="leo.20170706005043.12"><vh>溝通與表達內容</vh></v>
</v>
<v t="leo.20170706005043.13"><vh>各式內容引用範例</vh>
<v t="leo.20170706005043.14" a="E"><vh>導入數學符號與方程式</vh>
<v t="leo.20170706005043.15"><vh>LaTeX 格式方程式</vh></v>
</v>
<v t="leo.20170706005043.16" a="E"><vh>導入縮排程式碼</vh>
<v t="leo.20170706005043.17"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170706005043.18" a="E"><vh>導入影片</vh>
<v t="leo.20170706005043.19"><vh>iframe 導入影片</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="yen.20170108171733.3"><vh>@edit README.md</vh></v>
<v t="yen.20170108171733.4"><vh>@edit .gitignore</vh></v>
<v t="yen.20170108171733.2"><vh>@button local-blog</vh></v>
<v t="leo.20170709224430.1"><vh>@button github-blog</vh></v>
<v t="leo.20170710021233.1"><vh>@path slides</vh>
<v t="leo.20170710021247.1" a="E"><vh>@clean template_slide.html</vh>
<v t="leo.20170710021247.2" a="E"><vh>html</vh>
<v t="leo.20170710021247.3"><vh>head</vh></v>
<v t="leo.20170710021247.4" a="E"><vh>body</vh>
<v t="leo.20170710021247.5" a="E"><vh>reveal div</vh>
<v t="leo.20170710021247.6" a="E"><vh>slides div</vh>
<v t="leo.20170710021247.7" a="E"><vh>封面投影片</vh>
<v t="leo.20170710021247.8"><vh>封面投影片內容</vh></v>
</v>
<v t="leo.20170710021247.9"><vh>快捷鍵</vh>
<v t="leo.20170710021247.10"><vh>投影片快捷鍵</vh></v>
</v>
<v t="leo.20170710021247.11" a="E"><vh>溝通與表達</vh>
<v t="leo.20170710021247.12"><vh>溝通與表達內容</vh></v>
</v>
<v t="leo.20170710021247.13"><vh>各式內容引用範例</vh>
<v t="leo.20170710021247.14" a="E"><vh>導入數學符號與方程式</vh>
<v t="leo.20170710021247.15"><vh>LaTeX 格式方程式</vh></v>
</v>
<v t="leo.20170710021247.16" a="E"><vh>導入縮排程式碼</vh>
<v t="leo.20170710021247.17"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170710021247.18" a="E"><vh>導入影片</vh>
<v t="leo.20170710021247.19"><vh>iframe 導入影片</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="yen.20170108171733.5" a="E"><vh>Pelican 設定</vh>
<v t="leo.20170709015940.1"><vh>近端</vh></v>
<v t="yen.20170108171733.6"><vh>@edit local_publishconf.py</vh></v>
<v t="leo.20170709015947.1"><vh>遠端</vh></v>
<v t="leo.20170709015955.1"><vh>@edit publishconf.py</vh></v>
<v t="leo.20170709020600.1"><vh>共用</vh></v>
<v t="yen.20170108171733.7"><vh>@edit pelicanconf.py</vh></v>
</v>
<v t="yen.20170224232341.1" a="E"><vh>編輯 template</vh>
<v t="yen.20170224232341.2" a="E"><vh>@path theme/pelican-bootstrap3_local/templates</vh>
<v t="yen.20170224232341.3"><vh>@edit base.html</vh></v>
</v>
<v t="leo.20170710015301.1" a="E"><vh>@path theme/pelican-bootstrap3/templates</vh>
<v t="leo.20170710015311.1"><vh>@edit search.html</vh></v>
<v t="leo.20170710095845.1"><vh>@edit base.html</vh></v>
<v t="leo.20170710101854.1"><vh>@edit article.html</vh></v>
</v>
</v>
<v t="leo.20170710015511.1" a="E"><vh>編輯 plugin</vh>
<v t="leo.20170710015523.1" a="E"><vh>@path plugin</vh>
<v t="leo.20170710015523.2" a="E"><vh>@path tipue_search</vh>
<v t="leo.20170710015523.3"><vh>@edit tipue_search.py</vh></v>
</v>
</v>
</v>
<v t="yen.20170108171733.71" a="E"><vh>@path content</vh>
<v t="leo.20170710162557.1" a="E"><vh>軟硬體設置</vh>
<v t="leo.20170706020010.1"><vh>@edit 20170605-1.md</vh></v>
</v>
<v t="leo.20170710162546.1" a="E"><vh>電腦模擬</vh>
<v t="leo.20170706015402.1"><vh>@edit 20170605-2.md</vh></v>
</v>
<v t="leo.20170710162534.1" a="E"><vh>實作</vh>
<v t="leo.20170706020035.1"><vh>@edit 20170605-3.md</vh></v>
</v>
<v t="leo.20170710162521.1" a="E"><vh>其他</vh>
<v t="leo.20170706020044.1"><vh>@edit 20170605-4.md</vh></v>
</v>
<v t="leo.20170710162500.1" a="E"><vh>大學生為何不來上課?</vh>
<v t="leo.20170706020055.1"><vh>@edit 20170605-5.md</vh></v>
</v>
<v t="leo.20170710162358.1" a="E"><vh>計算機程式</vh>
<v t="leo.20170706020102.1"><vh>@edit 20170612-1.md</vh></v>
</v>
<v t="leo.20170710162347.1" a="E"><vh>電腦輔助設計實習</vh>
<v t="leo.20170706020111.1"><vh>@edit 20170618-1.md</vh></v>
</v>
<v t="leo.20170710162330.1" a="E"><vh>協同產品設計實習</vh>
<v t="leo.20170706020122.1"><vh>@edit 20170618-2.md</vh></v>
<v t="leo.20170710162608.1"><vh>網際內容管理</vh></v>
<v t="leo.20170706020211.1"><vh>@edit 20170618-3.md</vh></v>
</v>
<v t="yen.20170108171733.81" a="E"><vh>@path pages</vh>
<v t="yen.20170108171733.82"><vh>@edit pages_1.md</vh></v>
</v>
</v>
<v t="leo.20170710022054.1"><vh>可以另建節點存放 content 目錄下的 md 檔案</vh></v>
<v t="leo.20170710022041.1" a="E"><vh>@path content</vh>
<v t="leo.20170710162623.1" a="E"><vh>計算機程式與電腦輔助設計實習</vh>
<v t="leo.20170710022207.1"><vh>@edit 20170618.md</vh></v>
</v>
<v t="leo.20170710225031.1" a="E"><vh>2015 Fall CADP W16</vh>
<v t="leo.20170710225034.1"><vh>@edit 20170710.md</vh></v>
</v>
<v t="leo.20170714000548.1"><vh>Create a multi-repository Fossil Server</vh>
<v t="leo.20170714000620.1"><vh>@edit 20170714.md</vh></v>
</v>
<v t="yen.20170731134418.1" a="E"><vh>PyQt5 calculator</vh>
<v t="yen.20170731134425.1"><vh>@edit 20170731.md</vh></v>
</v>
</v>
<v t="yen.20170108171733.83"><vh>產生 .key 與 .crt 指令</vh></v>
</v>
<v t="yen.20170108171930.1"><vh>@button https server</vh></v>
<v t="yen.20170108171939.1"><vh>@button ipv6 https server</vh></v>
<v t="leo.20170710022428.1" a="E"><vh>Git 操作</vh>
<v t="leo.20170710022851.1"><vh>github pages</vh></v>
</v>
<v t="leo.20170706003834.1"><vh>Pelican 與版次管理</vh></v>
<v t="leo.20170709091423.1"><vh>Fossil SCM 檔案格式</vh></v>
<v t="leo.20170710000725.1"><vh>近端的 Fossil 與遠端的 Github</vh></v>
</vnodes>
<tnodes>
<t tx="leo.20170706003834.1">只需要管理 Pelican 有關的設定檔案與 .md 檔案, 其餘都只保留最新檔案即可?

至於 __FOSSIL__ 檔案是否納入 git 版次管理??</t>
<t tx="leo.20170706005043.1">@language xml
@tabwidth -4
@others

</t>
<t tx="leo.20170706005043.10"># 投影片快捷鍵

* 利用箭頭上下前後換頁
* 按 f 鍵進入全螢幕模式 (full screen)
* 按 s 鍵可以顯示投影片筆記 (show)
* 按 o 鍵可以切換單張或全域檢視 (overview)
* 按 b 或 . 鍵可以切換螢幕黑屏 (black)
* 按 Esc 可以退出全螢幕或全域檢視 (Escape)

</t>
<t tx="leo.20170706005043.11">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170706005043.12"># 溝通與表達

* 溝通 communication
* 表達 presentation
* 設定溝, 如何通?
* 如何表? 是否達?
* 溝通才有共識
* 表達方能了解彼此

</t>
<t tx="leo.20170706005043.13">&lt;section&gt;
@others
&lt;/section&gt;</t>
<t tx="leo.20170706005043.14">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170706005043.15"># 數學符號與方程式

Inline math equations go in like so: $\omega = d\phi / dt$. Display
math should get its own line and be put in in double-dollarsigns:

$$I = \int \rho R^{2} dV$$
</t>
<t tx="leo.20170706005043.16">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170706005043.17">## 利用 Markdown 寫投影片
以下利用 Markdown 格式展示 Python 程式碼:
```
@language python
# use threading and subprocess to threading the make process
import os
import subprocess
import threading

def domake():
    
    path = "../exposed/api/exposed"
    ubuntu = "../Ubuntu"
    
    # create obj path
    
    if not os.path.exists(path+"/../obj"):
        os.makedirs(path+"/../obj")
    
    subprocess.call(["make", "clean"], cwd=path)
    subprocess.call("make", cwd=path)
    subprocess.call(["cp", "{libslvs.so, _slvs.so, slvs.py}", ubuntu], cwd=path)
    subprocess.call(["python3", "circle_ex.py"], cwd=path+"/"+ubuntu)
    
make = threading.Thread(target=domake)
make.start()
```
</t>
<t tx="leo.20170706005043.18">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170706005043.19">## 使用 iframe 導入影片

### 導入影片 template

&lt;iframe src="https://player.vimeo.com/video/183950627" width="640" height="492" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170706005043.2">&lt;!doctype html&gt;
&lt;html lang="en"&gt;
@others
&lt;/html&gt;
</t>
<t tx="leo.20170706005043.3">&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
&lt;title&gt;
KMOLab 機械設計工程
&lt;/title&gt;
    &lt;meta name="description" content="A framework for easily creating beautiful presentations using HTML"&gt;
    &lt;meta name="author" content="Hakim El Hattab"&gt;
    
    &lt;meta name="apple-mobile-web-app-capable" content="yes"&gt;
    &lt;meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"&gt;
    
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"&gt;
    
    &lt;link rel="stylesheet" href="https://cad-lab.github.io/cadlab_data/reveal/css/reveal.css"&gt;
    &lt;link rel="stylesheet" href="https://cad-lab.github.io/cadlab_data/reveal/css/theme/black.css" id="theme"&gt;
    
    &lt;!-- Theme used for syntax highlighting of code --&gt;
    &lt;link rel="stylesheet" href="https://cad-lab.github.io/cadlab_data/reveal/lib/css/zenburn.css"&gt;

    &lt;!-- Printing and PDF exports --&gt;
    &lt;script&gt;
        var link = document.createElement( 'link' );
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = window.location.search.match( /print-pdf/gi ) ? 'https://cad-lab.github.io/cadlab_data/reveal/css/print/pdf.css' : 'https://cad-lab.github.io/cadlab_data/reveal/css/print/paper.css';
        document.getElementsByTagName( 'head' )[0].appendChild( link );
    &lt;/script&gt;

    &lt;!--[if lt IE 9]&gt;
    &lt;script src="https://cad-lab.github.io/cadlab_data/reveal/lib/js/html5shiv.js"&gt;&lt;/script&gt;
    &lt;![endif]--&gt;
&lt;/head&gt;

</t>
<t tx="leo.20170706005043.4">&lt;body&gt;
@others
&lt;script src="https://cad-lab.github.io/cadlab_data/reveal/lib/js/head.min.js"&gt;&lt;/script&gt;
&lt;script src="https://cad-lab.github.io/cadlab_data/reveal/js/reveal.js"&gt;&lt;/script&gt;
&lt;script&gt;
        // More info https://github.com/hakimel/reveal.js#configuration
        Reveal.initialize({
            controls: true,
            progress: true,
            history: true,
            center: true,

            transition: 'slide', // none/fade/slide/convex/concave/zoom

            // More info https://github.com/hakimel/reveal.js#dependencies
            dependencies: [
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/lib/js/classList.js', condition: function() { return !document.body.classList; } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/zoom-js/zoom.js', async: true },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/notes/notes.js', async: true },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/math/math.js', async: true }
            ]
        });
&lt;/script&gt;
&lt;/body&gt;
</t>
<t tx="leo.20170706005043.5">&lt;div class="reveal"&gt;
@others
&lt;/div&gt;

</t>
<t tx="leo.20170706005043.6">&lt;!-- Any section element inside of this container is displayed as a slide --&gt;
&lt;div class="slides"&gt;
@others
&lt;/div&gt;

</t>
<t tx="leo.20170706005043.7">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170706005043.8">## 2017Fall KMOL 課程

### KMOLab 機械設計工程

&lt;small&gt;
Created by KMOLab
&lt;/small&gt;

[2017Fall 課程網誌](blog/index.html)


</t>
<t tx="leo.20170706005043.9">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170709015940.1"></t>
<t tx="leo.20170709015947.1"></t>
<t tx="leo.20170709020600.1"></t>
<t tx="leo.20170709091423.1">https://www.fossil-scm.org/xfer/doc/trunk/www/fileformat.wiki</t>
<t tx="leo.20170709224430.1">@language python
import os
#os.system("pelican content -o output -s local_publishconf.py -t theme/pelican-bootstrap3")
os.system("pelican content -o blog -s publishconf.py")
g.es("admin pelican Github 執行完畢")


</t>
<t tx="leo.20170710000725.1">三種類型的版次管理與協同溝通與表達

1) 近端 (區域網路下的實體或虛擬伺服器) 使用 Fossil SCM

資料在近端時可以進行各式檢視與測試

web based 伺服功能

2) 中端 (廣域網路下, 自行維護的實體或虛擬伺服器) 使用 Fossil SCM

資料在近端時可以進行各式檢視與測試

web based 伺服功能

3) 遠端使用 Github (account.github.io 或 Github Pages)

資料在近端時可以進行各式檢視與測試

資料在遠端可以利用 Github 網際介面改版, Github Pages 伺服 html + Javascript 主要儲存具完整更新歷程, 可多人協同維護的表達資料</t>
<t tx="leo.20170710015301.1"></t>
<t tx="leo.20170710015511.1"></t>
<t tx="leo.20170710015523.1"></t>
<t tx="leo.20170710015523.2"></t>
<t tx="leo.20170710021233.1"></t>
<t tx="leo.20170710021247.1">@language xml
@tabwidth -4
@others

</t>
<t tx="leo.20170710021247.10"># 投影片快捷鍵

* 利用箭頭上下前後換頁
* 按 f 鍵進入全螢幕模式 (full screen)
* 按 s 鍵可以顯示投影片筆記 (show)
* 按 o 鍵可以切換單張或全域檢視 (overview)
* 按 b 或 . 鍵可以切換螢幕黑屏 (black)
* 按 Esc 可以退出全螢幕或全域檢視 (Escape)

</t>
<t tx="leo.20170710021247.11">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170710021247.12"># 溝通與表達

* 溝通 communication
* 表達 presentation
* 設定溝, 如何通?
* 如何表? 是否達?
* 溝通才有共識
* 表達方能了解彼此

</t>
<t tx="leo.20170710021247.13">&lt;section&gt;
@others
&lt;/section&gt;</t>
<t tx="leo.20170710021247.14">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170710021247.15"># 數學符號與方程式

Inline math equations go in like so: $\omega = d\phi / dt$. Display
math should get its own line and be put in in double-dollarsigns:

$$I = \int \rho R^{2} dV$$
</t>
<t tx="leo.20170710021247.16">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170710021247.17">## 利用 Markdown 寫投影片
以下利用 Markdown 格式展示 Python 程式碼:
```
@language python
# use threading and subprocess to threading the make process
import os
import subprocess
import threading

def domake():
    
    path = "../exposed/api/exposed"
    ubuntu = "../Ubuntu"
    
    # create obj path
    
    if not os.path.exists(path+"/../obj"):
        os.makedirs(path+"/../obj")
    
    subprocess.call(["make", "clean"], cwd=path)
    subprocess.call("make", cwd=path)
    subprocess.call(["cp", "{libslvs.so, _slvs.so, slvs.py}", ubuntu], cwd=path)
    subprocess.call(["python3", "circle_ex.py"], cwd=path+"/"+ubuntu)
    
make = threading.Thread(target=domake)
make.start()
```
</t>
<t tx="leo.20170710021247.18">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170710021247.19">## 使用 iframe 導入影片

### 導入影片 template

&lt;iframe src="https://player.vimeo.com/video/183950627" width="640" height="492" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170710021247.2">&lt;!doctype html&gt;
&lt;html lang="en"&gt;
@others
&lt;/html&gt;
</t>
<t tx="leo.20170710021247.3">&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
&lt;title&gt;
KMOLab 機械設計工程
&lt;/title&gt;
    &lt;meta name="description" content="A framework for easily creating beautiful presentations using HTML"&gt;
    &lt;meta name="author" content="Hakim El Hattab"&gt;
    
    &lt;meta name="apple-mobile-web-app-capable" content="yes"&gt;
    &lt;meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"&gt;
    
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"&gt;
    
    &lt;link rel="stylesheet" href="https://cad-lab.github.io/cadlab_data/reveal/css/reveal.css"&gt;
    &lt;link rel="stylesheet" href="https://cad-lab.github.io/cadlab_data/reveal/css/theme/black.css" id="theme"&gt;
    
    &lt;!-- Theme used for syntax highlighting of code --&gt;
    &lt;link rel="stylesheet" href="https://cad-lab.github.io/cadlab_data/reveal/lib/css/zenburn.css"&gt;

    &lt;!-- Printing and PDF exports --&gt;
    &lt;script&gt;
        var link = document.createElement( 'link' );
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = window.location.search.match( /print-pdf/gi ) ? 'https://cad-lab.github.io/cadlab_data/reveal/css/print/pdf.css' : 'https://cad-lab.github.io/cadlab_data/reveal/css/print/paper.css';
        document.getElementsByTagName( 'head' )[0].appendChild( link );
    &lt;/script&gt;

    &lt;!--[if lt IE 9]&gt;
    &lt;script src="https://cad-lab.github.io/cadlab_data/reveal/lib/js/html5shiv.js"&gt;&lt;/script&gt;
    &lt;![endif]--&gt;
&lt;/head&gt;

</t>
<t tx="leo.20170710021247.4">&lt;body&gt;
@others
&lt;script src="https://cad-lab.github.io/cadlab_data/reveal/lib/js/head.min.js"&gt;&lt;/script&gt;
&lt;script src="https://cad-lab.github.io/cadlab_data/reveal/js/reveal.js"&gt;&lt;/script&gt;
&lt;script&gt;
        // More info https://github.com/hakimel/reveal.js#configuration
        Reveal.initialize({
            controls: true,
            progress: true,
            history: true,
            center: true,

            transition: 'slide', // none/fade/slide/convex/concave/zoom

            // More info https://github.com/hakimel/reveal.js#dependencies
            dependencies: [
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/lib/js/classList.js', condition: function() { return !document.body.classList; } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/zoom-js/zoom.js', async: true },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/notes/notes.js', async: true },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/math/math.js', async: true }
            ]
        });
&lt;/script&gt;
&lt;/body&gt;
</t>
<t tx="leo.20170710021247.5">&lt;div class="reveal"&gt;
@others
&lt;/div&gt;

</t>
<t tx="leo.20170710021247.6">&lt;!-- Any section element inside of this container is displayed as a slide --&gt;
&lt;div class="slides"&gt;
@others
&lt;/div&gt;

</t>
<t tx="leo.20170710021247.7">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170710021247.8">## KMOL 課程

### KMOLab 機械設計工程

&lt;small&gt;
Created by KMOLab
&lt;/small&gt;

[2017Fall 課程網誌](./../blog/index.html)


</t>
<t tx="leo.20170710021247.9">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170710022041.1"></t>
<t tx="leo.20170710022054.1"></t>
<t tx="leo.20170710022428.1">Windows 7 環境下首次使用 git command 時要求登入後, 會在

控制台-&gt;使用者帳號-&gt;使用者下建立

管理認證-&gt;一般認證

若要更換帳號, 則必須刪除後重新登入

與舊版差別, 同一台電腦只要登入一次

壞處則是若經常更換推送用戶時必須刪除認證後重新登入</t>
<t tx="leo.20170710022851.1">因為 kmolab.github.io 為帳號對應倉儲, 因此可以使用 master branch 伺服網頁

其他倉儲則只允許 gh-pages branch 伺服網頁</t>
<t tx="leo.20170710162330.1"></t>
<t tx="leo.20170710162347.1"></t>
<t tx="leo.20170710162358.1"></t>
<t tx="leo.20170710162500.1"></t>
<t tx="leo.20170710162521.1"></t>
<t tx="leo.20170710162534.1"></t>
<t tx="leo.20170710162546.1"></t>
<t tx="leo.20170710162557.1"></t>
<t tx="leo.20170710162608.1"></t>
<t tx="leo.20170710162623.1"></t>
<t tx="leo.20170710225031.1"></t>
<t tx="leo.20170714000548.1"></t>
<t tx="yen.20170108171605.1"></t>
<t tx="yen.20170108171605.2">QTreeWidget {
    /* These apply to the selected item, but not to editing items.*/
    background-color: #ffffec; /* Leo's traditional tree color */
    selection-color: black; /* was white */
    selection-background-color: lightgrey;
    /* font-family: SansSerif; */
    /*font-family: DejaVu Sans Mono;*/
    font-family:YaHei Mono;
    /* 標題字型大小設定 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
 }

/* Headline edit widgets */
QTreeWidget QLineEdit {
    background-color: cornsilk;
    selection-color: white;
    selection-background-color: blue;
    /*font-family: DejaVu Sans Mono;*/    
    font-family:YaHei Mono;
    /* 沒有特別對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The log panes */
QTextEdit {
    background-color: #f2fdff;
    selection-color: red;
    selection-background-color: blue;
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* log font 大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The body pane */
QTextEdit#richTextEdit {
    background-color: #fdf5f5; /* A kind of pink. */
    selection-color: white;
    selection-background-color: red;
    /*font-family: DejaVu Sans Mono;*/
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* 內文字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

QLabel {
    font-family:YaHei Mono;'CherryPy', 'pytz', 'mako', 'beautifulsoup4', 'pymysql', 'peewee'
    /* 下方的 Minibuffer 標題字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

/* Editor labels */
QLineEdit#editorLabel {
    background-color: #ffffec;
    font-family:YaHei Mono;
    /* 沒有直接對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
    border: 2px;
    margin: 2px;
}</t>
<t tx="yen.20170108171605.3">horizontal: body pane to the left
vertical: body pane on the botton</t>
<t tx="yen.20170108171622.1">有關 kmolab.github.io

倉儲位置: https://github.com/kmolab.github.io

每一協同成員都應該要在 users 目錄下有一個 Leo 檔案

</t>
<t tx="yen.20170108171733.1"></t>
<t tx="yen.20170108171733.2">@language python
import os
#os.system("pelican content -o output -s local_publishconf.py -t theme/pelican-bootstrap3")
os.system("pelican content -o blog -s local_publishconf.py")
g.es("admin pelican 近端執行完畢")


</t>
<t tx="yen.20170108171733.5"></t>
<t tx="yen.20170108171733.71"></t>
<t tx="yen.20170108171733.81"></t>
<t tx="yen.20170108171733.83">sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout localhost.key -out localhost.crt

</t>
<t tx="yen.20170108171930.1">@language python
import os
import subprocess
import threading
import http.server, ssl

def domake():
    # build directory
    os.chdir("./../")
    server_address = ('localhost', 5443)
    httpd = http.server.HTTPServer(server_address, http.server.SimpleHTTPRequestHandler)
    httpd.socket = ssl.wrap_socket(httpd.socket,
                                   server_side=True,
                                   certfile='localhost.crt',
                                   keyfile='localhost.key',
                                   ssl_version=ssl.PROTOCOL_TLSv1)
    print(os.getcwd())
    print("5443 https server started")
    httpd.serve_forever()

# 利用執行緒執行 https 伺服器
make = threading.Thread(target=domake)
make.start()</t>
<t tx="yen.20170108171939.1">@language python
import os
import subprocess
import threading
import socket
import http.server, ssl

class HTTPServerV6(http.server.HTTPServer):
    address_family = socket.AF_INET6
  
def domake():
    # build directory
    os.chdir("./../")
    ipv6_address = '2001:288:6004:17:3004::808'
    server_address = (ipv6_address, 6443)
    #httpd = http.server.HTTPServer(server_address, http.server.SimpleHTTPRequestHandler)
    httpd = HTTPServerV6(server_address, http.server.SimpleHTTPRequestHandler)
    httpd.socket = ssl.wrap_socket(httpd.socket,
                                   server_side=True,
                                   certfile='localhost.crt',
                                   keyfile='localhost.key',
                                   ssl_version=ssl.PROTOCOL_TLSv1)
    print("6443 https server started")
    httpd.serve_forever()

# 利用執行緒執行 https 伺服器
make = threading.Thread(target=domake)
make.start()</t>
<t tx="yen.20170224232341.1"></t>
<t tx="yen.20170224232341.2"></t>
<t tx="yen.20170731134418.1"></t>
</tnodes>
</leo_file>
